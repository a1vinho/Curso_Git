Processo de Trabalho do Git
{
    Estado Inicial de Arquivos {
        Quando você cria um novo arquivo em um repositório inicializado com Git, o arquivo está em um estado chamado "irrastreável" ou "untracked". Isso significa que o Git ainda não está monitorando esse arquivo para mudanças.
    }

    Adicionar Arquivos ao Staging: {
        Para que o Git comece a rastrear um arquivo e suas alterações, você usa o comando git add <file>. Esse comando move o arquivo para a área de staging, onde você pode preparar as mudanças antes de confirmá-las. A área de staging permite que você selecione quais mudanças serão incluídas no próximo commit.

        Comando:
        git add <file/diretory>

        Podemos adiciona todos os arquivos do repositorio utilizando o 
        git add . 
    }

    Armazenar Histórico com Commits: {
        Após adicionar arquivos à área de staging, o próximo passo é fazer um commit. O commit salva o estado dos arquivos na área de staging no histórico do Git. Cada commit é identificado por um código único, chamado hash, que é um código hexadecimal gerado a partir do conteúdo do commit. Esse hash é usado para referenciar e recuperar versões anteriores do repositório.

        Comando para commit: git commit -m "Mensagem do commit",a flag -m indica uma mensagem para deixamos no commiter,para indica o que foi feito com os arquivos adicionando na Staging

        O hash gerado permite identificar e acessar o estado exato dos arquivos no momento em que o commit foi feito. Para ver versões anteriores ou reverter a alterações, você pode usar o hash do commit.
    }
}

Verificando o status dos arquivos no repositorio: {
    Podemos verifica o status dos arquivos no repositorio,utilizando o comando git status,os principais tipos de status: {
        Arquivos Modificados: Arquivos que foram alterados desde o último commit, mas que ainda não foram adicionados à área de staging (untracked or modified).

        Arquivos na Área de Staging: Arquivos que foram adicionados à área de staging usando git add e estão prontos para o próximo commit.

        Arquivos Não Rastreáveis: Arquivos que foram criados no repositório, mas ainda não foram adicionados à área de staging. Esses arquivos são mostrados como "untracked".
    }  
}

Olhando o histórico de commits {
    Para olhamos o histórico de commits usamos o comando "git log" ele irá mostra os ultimos commits feito,data e a hora 

    Principais Informações que o git log Exibe: {
        Hash Commit: Cada commit tem um indetificador único chamado de hash (SHA-1),a hash do commit é um código hexadecimal.
        Autor do Commit: O nome e o e-mail da pessoa que fez o commit.
        Data do Commit: Quando o commit foi feito.
        Mensagem do Commit: A mensagem descritiva fornecida durante o commit, que explica as mudanças feitas.
    }
}
Verificando mudanças em arquivos {
    Com o "git diff" podemos vizualizar mudanças em arquivos no nosso repositorio,todo texto que estive em verde e outro vermelho,o texto verde foi a mudança feita e o texto vermelho é aonde a mudança foi feita
}

